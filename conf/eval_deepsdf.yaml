# @package _global_

defaults:
  - _self_
  - data:
    - shapenet_chair_1
    - deepsdf 
  - model: deepsdf
  - callbacks: default
  - logger: null 
  - trainer: default
  - hydra: default
  - paths: default
  - optional local: default

task_name: eval_deepsdf
tags: ["eval", "deepsdf"]
save_outcomes: True
ckpt_path: ???

trainer:
  accelerator: gpu
  max_epochs: 800
  check_val_every_n_epoch: ${trainer.max_epochs}
  precision: 16-mixed
  log_every_n_steps: 10

data:
  _target_: lib.data.deepsdf_datamodule.DeepSDFValidationDataModule
  batch_size: 1
  num_workers: 1
  subsample: 65536
  dataset:
    _target_: lib.data.deepsdf_dataset.DeepSDFDatasetMemory

data_val:
  experiment: val # train_eval_loop # val # val_16 # overfit_2_temp # val_16
  data_dir: ${paths.deepsdf_dir}/SdfSamples/${data_val.experiment}
  norm_dir: ${paths.deepsdf_dir}/NormalizationParameters/${data_val.experiment}
  ply_dir: ${paths.deepsdf_dir}/SurfaceSamples/${data_val.experiment}
  batch_size: 48 #48
  num_workers: 7
  pin_memory: True
  drop_last: False
  shuffle: True
  persistent_workers: True
  subsample: 16384
  _target_: lib.data.deepsdf_datamodule.DeepSDFValidationDataModule

  dataset:
    _target_: lib.data.deepsdf_dataset.DeepSDFDataset
    _partial_: True

  val_dataset:
    _target_: lib.data.deepsdf_dataset.PointCloudDataset
    _partial_: True
    ply_path: ${data_val.ply_dir}
    norm_path: ${data_val.norm_dir}

task_name: eval_deepsdf

logger:
  wandb:
    reinit: True
    group: "deepsdf"

# seed for random number generators in pytorch, numpy and python.random
seed: 42
