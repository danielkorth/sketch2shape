# @package _global_

defaults:
  - trainer: default
  - data: deepsdf_chair
  - logger: null
  - _self_
  - hydra: default
  - paths: default
  - debug: null

  # optional local config for machine/user specific settings
  # it's optional since it doesn't need to exist and is excluded from version control
  - optional local: default

# tags to help you identify your experiments
# you can overwrite this in experiment configs
# overwrite from command line with `python train.py tags="[first_tag, second_tag]"`
tags: ["opt", "deepsdf"]

trainer:
  accelerator: gpu
  max_epochs: 1000
  precision: 16-mixed
  log_every_n_steps: 1

ckpt_path: "/home/korth/sketch2shape/logs/train/runs/2023-12-25_08-37-31/checkpoints/last.ckpt"
model:
  _target_: lib.models.deepsdf.DeepSDFOptimizer
  prior_idx: -1 #negative value means no prior

  # the DeepSDF model checkpoint
  loss:
    _target_: torch.nn.L1Loss
    reduction: mean

  optim:
    _target_: torch.optim.Adam
    _partial_: true
    lr: 5e-3

  scheduler:
    _partial_: True
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 500
    gamma: 0.1

  save_obj: True
  save_obj_path: "/home/korth/sketch2shape/temp"

data:
  _target_: lib.data.deepsdf_datamodule.DeepSDFDataModule
  data_dir: /shared/data/ShapeNetV2/SdfSamples/overfit_1
  subsample: 65536

  num_workers: 7
  pin_memory: True
  persistent_workers: True
  drop_last: False

  dataset:
    _target_: lib.data.deepsdf_dataset.DeepSDFDataset
    _partial_: True

task_name: optimize_latent

# seed for random number generators in pytorch, numpy and python.random
seed: 42
